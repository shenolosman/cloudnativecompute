services:
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - REDIS_HOST=redis
    networks:
      - app-network

  product-service:
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - REDIS_HOST=redis
    networks:
      - app-network 

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - REDIS_HOST=redis
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  notification-service:
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    depends_on:
      - rabbitmq
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - app-network

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
    - RABBITMQ_DEFAULT_USER=guest
    - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI port
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network 

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=auth_db 
    ports:
      - "5432:5432"
    networks:
      - app-network 

  mongo:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=my_user
      - MONGO_INITDB_ROOT_PASSWORD=my_password
    ports:
      - "27017:27017"
    networks:
      - app-network


# private network
networks:
  app-network:
    driver: bridge